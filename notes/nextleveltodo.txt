import React, { Component } from "react";
import Person from "./Components/Person";
import "./App.css";

class App extends Component {
  state = {
    persons: [
      { id: "1", name: "Saljesh", age: 21 },
      { id: "2", name: "Annika", age: 23 },
      { id: "3", name: "Saugat", age: 22 },
    ],
    showPersons: false,
  };

  deletePersonHandler = (personIndex) => {
    // reference type so the original list is changing in pointer sth so we copy new
    // const persons = this.state.persons;
    // ----- this is way 1 to copy
    // const persons = this.state.persons.slice();

    const persons = [...this.state.persons];
    persons.splice(personIndex, 1);
    this.setState({ persons: persons });
  };

  nameChangeHandler = (event, id) => {
    const personIndex = this.state.persons.findIndex((p) => {
      return p.id === id;
    });

    const person = { ...this.state.persons[personIndex] };

    person.name = event.target.value;
    const persons = [...this.state.persons];
    persons[personIndex] = person;

    this.setState({ persons: persons });
  };

  toogglePersonHandler = () => {
    const doesShow = this.state.showPersons;
    this.setState({
      showPersons: !doesShow,
    });
  };

  // css styles are now scoped to component
  styles = {
    backgroundColor: "Yellow",
    font: "inherit",
    border: "1px solid white",
    cursor: "pointer",
    padding: "5px 10px",
  };

  render() {
    let persons = null;

    if (this.state.showPersons) {
      persons = (
        <div>
          {this.state.persons.map((person, index) => {
            return (
              <Person
                key={person.id}
                click={() => this.deletePersonHandler(index)}
                name={person.name}
                age={person.age}
                changed={(event) => this.nameChangeHandler(event, person.id)}
              ></Person>
            );
          })}
        </div>
      );
    }

    return (
      <div className="App">
        <h1>HI, I'm a react app</h1>
        <p>This is really working</p>
        {/* <button onClick={this.switchNameHandler.bind(this, "Saljesh")}>
          Switch Name
        </button> */}
        {/* this is another method to do if you wont use bind */}
        <button
          style={this.styles}
          // onClick={() => this.switchNameHandler("MAXY")}
          onClick={this.toogglePersonHandler}
        >
          Show Persons
        </button>
        {persons}
      </div>
    );
  }
}

export default App;
